import asyncio
import aiohttp
import datetime
import json
import urllib

import jmespath


BASE_URL = 'https://holidayapi.com/v1/holidays'
API_KEY = 'd38aba7e-9a87-412a-87ed-811b81afea31'
COUNTRY_NAMES = {
	'afghanistan': 'AF',
	'aland islands': 'AX',
	'albania': 'AL',
	'algeria': 'DZ',
	'american samoa': 'AS',
	'andorra': 'AD',
	'angola': 'AO',
	'anguilla': 'AI',
	'antarctica': 'AQ',
	'antigua and barbuda': 'AG',
	'argentina': 'AR',
	'armenia': 'AM',
	'aruba': 'AW',
	'australia': 'AU',
	'austria': 'AT',
	'azerbaijan': 'AZ',
	'bahamas': 'BS',
	'bahrain': 'BH',
	'bangladesh': 'BD',
	'barbados': 'BB',
	'belarus': 'BY',
	'belgium': 'BE',
	'belize': 'BZ',
	'benin': 'BJ',
	'bermuda': 'BM',
	'bhutan': 'BT',
	'bolivia': 'BO',
	'bosnia and herzegovina': 'BA',
	'botswana': 'BW',
	'bouvet island': 'BV',
	'brazil': 'BR',
	'british virgin islands': 'VG',
	'british indian ocean territory': 'IO',
	'brunei darussalam': 'BN',
	'bulgaria': 'BG',
	'burkina faso': 'BF',
	'burundi': 'BI',
	'cambodia': 'KH',
	'cameroon': 'CM',
	'canada': 'CA',
	'cape verde': 'CV',
	'cayman islands': 'KY',
	'central african republic': 'CF',
	'chad': 'TD',
	'chile': 'CL',
	'china': 'CN',
	'hong kong, sar china': 'HK',
	'macao, sar china': 'MO',
	'christmas island': 'CX',
	'cocos (keeling) islands': 'CC',
	'colombia': 'CO',
	'comoros': 'KM',
	'congo (brazzaville)': 'CG',
	'congo, (kinshasa)': 'CD',
	'cook islands': 'CK',
	'costa rica': 'CR',
	'côte d\'ivoire': 'CI',
	'croatia': 'HR',
	'cuba': 'CU',
	'cyprus': 'CY',
	'czech republic': 'CZ',
	'denmark': 'DK',
	'djibouti': 'DJ',
	'dominica': 'DM',
	'dominican republic': 'DO',
	'ecuador': 'EC',
	'egypt': 'EG',
	'el salvador': 'SV',
	'equatorial guinea': 'GQ',
	'eritrea': 'ER',
	'estonia': 'EE',
	'ethiopia': 'ET',
	'falkland islands (malvinas)': 'FK',
	'faroe islands': 'FO',
	'fiji': 'FJ',
	'finland': 'FI',
	'france': 'FR',
	'french guiana': 'GF',
	'french polynesia': 'PF',
	'french southern territories': 'TF',
	'gabon': 'GA',
	'gambia': 'GM',
	'georgia': 'GE',
	'germany': 'DE',
	'ghana': 'GH',
	'gibraltar': 'GI',
	'greece': 'GR',
	'greenland': 'GL',
	'grenada': 'GD',
	'guadeloupe': 'GP',
	'guam': 'GU',
	'guatemala': 'GT',
	'guernsey': 'GG',
	'guinea': 'GN',
	'guinea-bissau': 'GW',
	'guyana': 'GY',
	'haiti': 'HT',
	'heard and mcdonald islands': 'HM',
	'holy see (vatican city state)': 'VA',
	'honduras': 'HN',
	'hungary': 'HU',
	'iceland': 'IS',
	'india': 'IN',
	'indonesia': 'ID',
	'iran, islamic republic of': 'IR',
	'iraq': 'IQ',
	'ireland': 'IE',
	'isle of man': 'IM',
	'israel': 'IL',
	'italy': 'IT',
	'jamaica': 'JM',
	'japan': 'JP',
	'jersey': 'JE',
	'jordan': 'JO',
	'kazakhstan': 'KZ',
	'kenya': 'KE',
	'kiribati': 'KI',
	'korea (north)': 'KP',
	'korea (south)': 'KR',
	'kuwait': 'KW',
	'kyrgyzstan': 'KG',
	'lao pdr': 'LA',
	'latvia': 'LV',
	'lebanon': 'LB',
	'lesotho': 'LS',
	'liberia': 'LR',
	'libya': 'LY',
	'liechtenstein': 'LI',
	'lithuania': 'LT',
	'luxembourg': 'LU',
	'macedonia, republic of': 'MK',
	'madagascar': 'MG',
	'malawi': 'MW',
	'malaysia': 'MY',
	'maldives': 'MV',
	'mali': 'ML',
	'malta': 'MT',
	'marshall islands': 'MH',
	'martinique': 'MQ',
	'mauritania': 'MR',
	'mauritius': 'MU',
	'mayotte': 'YT',
	'mexico': 'MX',
	'micronesia, federated states of': 'FM',
	'moldova': 'MD',
	'monaco': 'MC',
	'mongolia': 'MN',
	'montenegro': 'ME',
	'montserrat': 'MS',
	'morocco': 'MA',
	'mozambique': 'MZ',
	'myanmar': 'MM',
	'namibia': 'NA',
	'nauru': 'NR',
	'nepal': 'NP',
	'netherlands': 'NL',
	'netherlands antilles': 'AN',
	'new caledonia': 'NC',
	'new zealand': 'NZ',
	'nicaragua': 'NI',
	'niger': 'NE',
	'nigeria': 'NG',
	'niue': 'NU',
	'norfolk island': 'NF',
	'northern mariana islands': 'MP',
	'norway': 'NO',
	'oman': 'OM',
	'pakistan': 'PK',
	'palau': 'PW',
	'palestinian territory': 'PS',
	'panama': 'PA',
	'papua new guinea': 'PG',
	'paraguay': 'PY',
	'peru': 'PE',
	'philippines': 'PH',
	'pitcairn': 'PN',
	'poland': 'PL',
	'portugal': 'PT',
	'puerto rico': 'PR',
	'qatar': 'QA',
	'réunion': 'RE',
	'romania': 'RO',
	'russian federation': 'RU',
	'rwanda': 'RW',
	'saint-barthélemy': 'BL',
	'saint helena': 'SH',
	'saint kitts and nevis': 'KN',
	'saint lucia': 'LC',
	'saint-martin (french part)': 'MF',
	'saint pierre and miquelon': 'PM',
	'saint vincent and grenadines': 'VC',
	'samoa': 'WS',
	'san marino': 'SM',
	'sao tome and principe': 'ST',
	'saudi arabia': 'SA',
	'senegal': 'SN',
	'serbia': 'RS',
	'seychelles': 'SC',
	'sierra leone': 'SL',
	'singapore': 'SG',
	'slovakia': 'SK',
	'slovenia': 'SI',
	'solomon islands': 'SB',
	'somalia': 'SO',
	'south africa': 'ZA',
	'south georgia and the south sandwich islands': 'GS',
	'south sudan': 'SS',
	'spain': 'ES',
	'sri lanka': 'LK',
	'sudan': 'SD',
	'suriname': 'SR',
	'svalbard and jan mayen islands': 'SJ',
	'swaziland': 'SZ',
	'sweden': 'SE',
	'switzerland': 'CH',
	'syrian arab republic (syria)': 'SY',
	'taiwan, republic of china': 'TW',
	'tajikistan': 'TJ',
	'tanzania, united republic of': 'TZ',
	'thailand': 'TH',
	'timor-leste': 'TL',
	'togo': 'TG',
	'tokelau': 'TK',
	'tonga': 'TO',
	'trinidad and tobago': 'TT',
	'tunisia': 'TN',
	'turkey': 'TR',
	'turkmenistan': 'TM',
	'turks and caicos islands': 'TC',
	'tuvalu': 'TV',
	'uganda': 'UG',
	'ukraine': 'UA',
	'united arab emirates': 'AE',
	'united kingdom': 'GB',
	'united states': 'US',
	'us minor outlying islands': 'UM',
	'uruguay': 'UY',
	'uzbekistan': 'UZ',
	'vanuatu': 'VU',
	'venezuela (bolivarian republic)': 'VE',
	'viet nam': 'VN',
	'virgin islands, us': 'VI',
	'wallis and futuna islands': 'WF',
	'western sahara': 'EH',
	'yemen': 'YE',
	'zambia': 'ZM',
	'zimbabwe': 'ZW'
}

ALPHA3_CODE = {
	'afg': 'AF',
	'alb': 'AL',
	'dza': 'DZ',
	'asm': 'AS',
	'and': 'AD',
	'ago': 'AO',
	'aia': 'AI',
	'ata': 'AQ',
	'atg': 'AG',
	'arg': 'AR',
	'arm': 'AM',
	'abw': 'AW',
	'aus': 'AU',
	'aut': 'AT',
	'aze': 'AZ',
	'bhs': 'BS',
	'bhr': 'BH',
	'bgd': 'BD',
	'brb': 'BB',
	'blr': 'BY',
	'bel': 'BE',
	'blz': 'BZ',
	'ben': 'BJ',
	'bmu': 'BM',
	'btn': 'BT',
	'bol': 'BO',
	'bes': 'BQ',
	'bih': 'BA',
	'bwa': 'BW',
	'bvt': 'BV',
	'bra': 'BR',
	'iot': 'IO',
	'brn': 'BN',
	'bgr': 'BG',
	'bfa': 'BF',
	'bdi': 'BI',
	'cpv': 'CV',
	'khm': 'KH',
	'cmr': 'CM',
	'can': 'CA',
	'cym': 'KY',
	'caf': 'CF',
	'tcd': 'TD',
	'chl': 'CL',
	'chn': 'CN',
	'cxr': 'CX',
	'cck': 'CC',
	'col': 'CO',
	'com': 'KM',
	'cod': 'CD',
	'cog': 'CG',
	'cok': 'CK',
	'cri': 'CR',
	'hrv': 'HR',
	'cub': 'CU',
	'cuw': 'CW',
	'cyp': 'CY',
	'cze': 'CZ',
	'civ': 'CI',
	'dnk': 'DK',
	'dji': 'DJ',
	'dma': 'DM',
	'dom': 'DO',
	'ecu': 'EC',
	'egy': 'EG',
	'slv': 'SV',
	'gnq': 'GQ',
	'eri': 'ER',
	'est': 'EE',
	'swz': 'SZ',
	'eth': 'ET',
	'flk': 'FK',
	'fro': 'FO',
	'fji': 'FJ',
	'fin': 'FI',
	'fra': 'FR',
	'guf': 'GF',
	'pyf': 'PF',
	'atf': 'TF',
	'gab': 'GA',
	'gmb': 'GM',
	'geo': 'GE',
	'deu': 'DE',
	'gha': 'GH',
	'gib': 'GI',
	'grc': 'GR',
	'grl': 'GL',
	'grd': 'GD',
	'glp': 'GP',
	'gum': 'GU',
	'gtm': 'GT',
	'ggy': 'GG',
	'gin': 'GN',
	'gnb': 'GW',
	'guy': 'GY',
	'hti': 'HT',
	'hmd': 'HM',
	'vat': 'VA',
	'hnd': 'HN',
	'hkg': 'HK',
	'hun': 'HU',
	'isl': 'IS',
	'ind': 'IN',
	'idn': 'ID',
	'irn': 'IR',
	'irq': 'IQ',
	'irl': 'IE',
	'imn': 'IM',
	'isr': 'IL',
	'ita': 'IT',
	'jam': 'JM',
	'jpn': 'JP',
	'jey': 'JE',
	'jor': 'JO',
	'kaz': 'KZ',
	'ken': 'KE',
	'kir': 'KI',
	'prk': 'KP',
	'kor': 'KR',
	'kwt': 'KW',
	'kgz': 'KG',
	'lao': 'LA',
	'lva': 'LV',
	'lbn': 'LB',
	'lso': 'LS',
	'lbr': 'LR',
	'lby': 'LY',
	'lie': 'LI',
	'ltu': 'LT',
	'lux': 'LU',
	'mac': 'MO',
	'mdg': 'MG',
	'mwi': 'MW',
	'mys': 'MY',
	'mdv': 'MV',
	'mli': 'ML',
	'mlt': 'MT',
	'mhl': 'MH',
	'mtq': 'MQ',
	'mrt': 'MR',
	'mus': 'MU',
	'myt': 'YT',
	'mex': 'MX',
	'fsm': 'FM',
	'mda': 'MD',
	'mco': 'MC',
	'mng': 'MN',
	'mne': 'ME',
	'msr': 'MS',
	'mar': 'MA',
	'moz': 'MZ',
	'mmr': 'MM',
	'nam': 'NA',
	'nru': 'NR',
	'npl': 'NP',
	'nld': 'NL',
	'ncl': 'NC',
	'nzl': 'NZ',
	'nic': 'NI',
	'ner': 'NE',
	'nga': 'NG',
	'niu': 'NU',
	'nfk': 'NF',
	'mnp': 'MP',
	'nor': 'NO',
	'omn': 'OM',
	'pak': 'PK',
	'plw': 'PW',
	'pse': 'PS',
	'pan': 'PA',
	'png': 'PG',
	'pry': 'PY',
	'per': 'PE',
	'phl': 'PH',
	'pcn': 'PN',
	'pol': 'PL',
	'prt': 'PT',
	'pri': 'PR',
	'qat': 'QA',
	'mkd': 'MK',
	'rou': 'RO',
	'rus': 'RU',
	'rwa': 'RW',
	'reu': 'RE',
	'blm': 'BL',
	'shn': 'SH',
	'kna': 'KN',
	'lca': 'LC',
	'maf': 'MF',
	'spm': 'PM',
	'vct': 'VC',
	'wsm': 'WS',
	'smr': 'SM',
	'stp': 'ST',
	'sau': 'SA',
	'sen': 'SN',
	'srb': 'RS',
	'syc': 'SC',
	'sle': 'SL',
	'sgp': 'SG',
	'sxm': 'SX',
	'svk': 'SK',
	'svn': 'SI',
	'slb': 'SB',
	'som': 'SO',
	'zaf': 'ZA',
	'sgs': 'GS',
	'ssd': 'SS',
	'esp': 'ES',
	'lka': 'LK',
	'sdn': 'SD',
	'sur': 'SR',
	'sjm': 'SJ',
	'swe': 'SE',
	'che': 'CH',
	'syr': 'SY',
	'twn': 'TW',
	'tjk': 'TJ',
	'tza': 'TZ',
	'tha': 'TH',
	'tls': 'TL',
	'tgo': 'TG',
	'tkl': 'TK',
	'ton': 'TO',
	'tto': 'TT',
	'tun': 'TN',
	'tur': 'TR',
	'tkm': 'TM',
	'tca': 'TC',
	'tuv': 'TV',
	'uga': 'UG',
	'ukr': 'UA',
	'are': 'AE',
	'gbr': 'GB',
	'umi': 'UM',
	'usa': 'US',
	'ury': 'UY',
	'uzb': 'UZ',
	'vut': 'VU',
	'ven': 'VE',
	'vnm': 'VN',
	'vgb': 'VG',
	'vir': 'VI',
	'wlf': 'WF',
	'esh': 'EH',
	'yem': 'YE',
	'zmb': 'ZM',
	'zwe': 'ZW',
	'ala': 'AX'
}


async def fetch(session, url):
	async with session.get(url) as response:
		return await response.text()


class HolidayAPI:
	SCHEMA = {
		'date': 'holidays[].date',
		'name': 'holidays[].name',
		'public': 'holidays[].public'
	}
	QUERIES = {
		'drop': 'DROP TABLE IF EXISTS quantum.HolidayAPI',
		'create': 'CREATE TABLE quantum.HolidayAPI (row_id UInt32, name String, date Date, country String, public UInt8, is_holiday UInt8) engine=MergeTree ORDER BY row_id SETTINGS index_granularity=8192',
		'insert': 'INSERT INTO quantum.HolidayAPI (row_id, name, date, country, is_holiday, public) VALUES'
	}
	METADATA = {
		'name': 'HolidayAPI',
		'columns': ['row_id', 'name', 'date', 'country', 'public', 'is_holiday'],
		'types': {
			'date': 'date',
			'country': 'country_code'
		}
	}

	_supported_country_list = ['US', 'IN', 'CA', 'AU']

	@staticmethod
	async def get(country: str, year: int = None):
		if country.lower() in COUNTRY_NAMES:
			country = [COUNTRY_NAMES[country.lower()]]
		elif country.lower() in ALPHA3_CODE:
			country = [ALPHA3_CODE[country.lower()]]
		elif country == 'all':
			country = HolidayAPI._supported_country_list

		if not year:
			year = datetime.date.today().year
		result = []
		for cnt in country:
			try:
				resp = await HolidayAPI.get_by_country(cnt, year)
				result.extend(resp)
			except:
				continue
		return result

	@staticmethod
	async def get_by_country(country_code, year):
		args = {'country': country_code, 'year': year, 'key': API_KEY}
		url = f'{BASE_URL}?{urllib.parse.urlencode(args)}'
		async with aiohttp.ClientSession() as session:
			response = await fetch(session, url)
			return HolidayAPI.parse(json.loads(response), country_code)

	@staticmethod
	def parse(response, country_code):
		result = {}
		for key, path in HolidayAPI.SCHEMA.items():
			result[key] = jmespath.search(path, response)

		return [
			{
				'date': date,
				'name': result['name'][idx],
				'public': result['public'][idx],
				'country': country_code,
				'is_holiday': True
			}
			for idx, date in enumerate(result['date'])
		]


if __name__ == '__main__':
	loop = asyncio.get_event_loop()
	result = loop.run_until_complete(HolidayAPI.get("IN", 2019))
	print(result)


